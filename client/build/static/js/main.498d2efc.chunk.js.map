{"version":3,"sources":["styles/SideBarStyles.js","styles/AddFormStyles.js","styles/ContextMenu.js","components/ContextMenu.js","components/TodoStacks.js","components/TodoAdd.js","styles/NoteStyles.js","components/Notes.js","App.js","serviceWorker.js","index.js"],"names":["SideBar","Styled","div","ContentDiv","ul","Content","li","GlobalStyle","createGlobalStyle","FormDiv","AddType","input","attrs","props","placeholder","AddDesc","textarea","AddName","AddDiv","AddFormButton","button","AddForm","form","id","AddLabel","label","MenuDiv","MenuList","MenuItem","ContextMenu","state","contextMenu","x","y","document","addEventListener","e","clickx","clientX","clicky","clientY","target","parent","parentNode","content","getElementsByClassName","preventDefault","setState","prevState","menu","getElementById","console","log","this","style","left","top","display","Component","TodoStacks","open","createBook","bind","item","key","className","text","items","entries","listedItems","map","Fragment","onClick","toggleNotes","TodoAdd","expandForm","addStack","_nameBox","value","newItem","_typeBox","_descBox","Date","now","concat","onSubmit","ref","a","b","c","NotesDiv","Notes","showNotes","App","showBooks","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.498d2efc.chunk.js","sourcesContent":["import Styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst SideBar = Styled.div`\r\n    background: linear-gradient(#aaa, #8f8fa5);\r\n    height:100%;\r\n    left:0;\r\n    bottom:0;\r\n    width:150px;\r\n    position:relative;\r\n    margin-right:0;\r\n    display:inline-block;\r\n`;\r\n\r\nconst ContentDiv = Styled.ul`\r\n    display:block;\r\n    background-color: white;\r\n    width:90%;\r\n    margin:auto;\r\n    top:20px;\r\n    height:90%;\r\n    overflow-x:scroll;\r\n    position:absolute;\r\n    padding-left:0;\r\n    z-index:1;\r\n    \r\n    &::-webkit-scrollbar {\r\n        display: block;\r\n        width: .3em;\r\n        overflow: auto;\r\n        height: 0;\r\n    }\r\n \r\n    &::-webkit-scrollbar-track {\r\n        width: 0px;\r\n        height: 0px;\r\n        background-color: #aaa; /* or add it to the track */\r\n    }\r\n \r\n    &::-webkit-scrollbar-thumb {\r\n        background: #000; \r\n    }\r\n    h2{\r\n        margin-top:10px;\r\n        margin-bottom:10px;\r\n    }\r\n    i{\r\n\r\n        width:100%;\r\n    }\r\n`;\r\n\r\nconst Content = Styled.li`\r\n    list-style: none;\r\n    display:block;\r\n    border-bottom:1px solid grey;\r\n`;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html{\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n    body{\r\n        height: 100%;\r\n        width: 100%;\r\n        margin:0;\r\n    }\r\n    #root{\r\n        overflow-x:show;\r\n        height:100%;\r\n        width:100%;\r\n    }\r\n`;\r\nexport { SideBar, ContentDiv, GlobalStyle, Content }","import Styled from 'styled-components';\r\n\r\nconst FormDiv = Styled.div`\r\n    display:block;\r\n    z-index:2;\r\n    background-color:grey;\r\n    position:relative;\r\n`;\r\n\r\nconst AddType = Styled.input.attrs((props) => ({\r\n    placeholder: \"Type of todolist\"\r\n}))`\r\n    display:block;\r\n    width: 90%;\r\n    margin: auto;\r\n    \r\n`;\r\n\r\nconst AddDesc = Styled.textarea.attrs((props) => ({\r\n    placeholder: \"Description of this todolist\"\r\n}))`\r\n    resize: none;\r\n    display:block;\r\n    width: 90%;\r\n    margin: auto;\r\n`;\r\n\r\nconst AddName = Styled.input.attrs((props) => ({\r\n    placeholder: \"Name of todolist\"\r\n}))`\r\n    display:block;\r\n    width: 90%;\r\n    margin: auto;\r\n    z-index:2;\r\n`;\r\n\r\nconst AddDiv = Styled.div`\r\n    display:block;\r\n`;\r\n\r\nconst AddFormButton = Styled.button`\r\n\r\n    display:inline-block;\r\n    margin-left: 10px;\r\n    border-radius:50%;\r\n    border: none;\r\n    background-color: blue;\r\n\r\n\r\n`;\r\n\r\nconst AddForm = Styled.form.attrs((props) =>({\r\n    id:'AddForm'\r\n}))`\r\n    width: 100%;\r\n    display:block;\r\n    z-index:2;\r\n\r\n`;\r\n\r\nconst AddLabel = Styled.label`\r\n    font-size: 15px;\r\n    display:inline-block;\r\n    margin-left:5%;\r\n    @media (max-width:720px) {\r\n        font-size:10px;\r\n    }\r\n`;\r\n\r\nexport { AddDesc, FormDiv, AddType, AddName, AddFormButton, AddDiv, AddLabel, AddForm }","import Styled from 'styled-components';\r\n\r\nconst MenuDiv = Styled.div.attrs({\r\n    id:\"menuDiv\"\r\n})`\r\n    position:absolute;\r\n    background:grey;\r\n    z-index: 5;\r\n    visibility: 0;\r\n    height:auto;\r\n    width:auto;\r\n    text-align:center;\r\n    display:none;\r\n`;\r\n\r\nconst MenuList = Styled.ul`\r\n    list-style:none;\r\n    margin:0;\r\n    padding:0;\r\n\r\n\r\n`;\r\nconst MenuItem = Styled.li`\r\n    border-bottom:1px solid black;\r\n    &:hover{\r\n        cursor:pointer;\r\n        background-color:blue;\r\n    }\r\n`;\r\n\r\nexport{MenuDiv, MenuItem, MenuList}\r\n","import React, { Component } from 'react'\r\nimport { MenuDiv, MenuList, MenuItem } from '../styles/ContextMenu'\r\n\r\nexport class ContextMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            contextMenu: false,\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('contextmenu', e => {\r\n\r\n            var clickx = e.clientX;\r\n            var clicky = e.clientY\r\n            var target = e.target;\r\n            var parent = e.target.parentNode;\r\n            var content = document.getElementsByClassName(\"content\");\r\n            if (target === content || parent === content || parent.parent === content) {\r\n                e.preventDefault()\r\n                this.setState((prevState) => ({\r\n                    contextMenu: !prevState.contextMenu,\r\n                    x: clickx,\r\n                    y: clicky,\r\n                }))\r\n            }\r\n        })\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        const menu = document.getElementById('menuDiv');\r\n        console.log(this.state.contextMenu)\r\n        if (this.state.contextMenu) {\r\n            menu.style.left = this.state.x + 'px'\r\n            menu.style.top = this.state.y + 'px'\r\n            menu.style.display = \"inline-block\";\r\n        } else {\r\n            menu.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MenuDiv>\r\n                <MenuList>\r\n                    <MenuItem>Add</MenuItem>\r\n                    <MenuItem>Delete</MenuItem>\r\n                    <MenuItem>Expand</MenuItem>\r\n                </MenuList>\r\n            </MenuDiv>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContextMenu\r\n","import React, { Component } from 'react';\r\nimport { ContentDiv, Content } from '../styles/SideBarStyles';\r\nimport {ContextMenu} from './ContextMenu';\r\n\r\nexport class TodoStacks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            contextMenu: false,\r\n        }\r\n        this.createBook = this.createBook.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n    }\r\n    createBook(item) {\r\n        return (\r\n            <Content\r\n             key={item.key} className=\"content\">\r\n                <h2>{item.text[0]}</h2>\r\n                <i>type:{item.text[1]}</i>\r\n            </Content>\r\n        )\r\n    }\r\n    render() {\r\n        var items = this.props.entries;\r\n        var listedItems = items.map(this.createBook)\r\n        \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ContentDiv>\r\n                    <div className={\"todoBook\"} onClick={() => this.props.toggleNotes(items.key)}>\r\n                        {listedItems}\r\n                    </div>\r\n                </ContentDiv>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoStacks\r\n","import React, { Component } from 'react'\r\nimport { FormDiv, AddType, AddDesc, AddName, AddFormButton, AddDiv, AddLabel, AddForm } from '../styles/AddFormStyles'\r\nimport { TodoStacks } from \"./TodoStacks\";\r\nimport Expand from 'react-expand-animated';\r\n\r\nexport class TodoAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            open: false,\r\n        }\r\n        this.expandForm = this.expandForm.bind(this);\r\n        this.addStack = this.addStack.bind(this);\r\n    }\r\n    expandForm = () => {\r\n        this.setState(prevState => ({ open: !prevState.open }));\r\n    }\r\n    addStack = e => {\r\n        if (this._nameBox.value !== \"\") {\r\n            var newItem = {\r\n                text: [this._nameBox.value, this._typeBox.value, this._descBox.value,],\r\n                key: Date.now()\r\n            }\r\n        }\r\n        this.setState((prevState) => {\r\n            return {\r\n                items: prevState.items.concat(newItem)\r\n            }\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <AddDiv>\r\n                    <AddLabel>Add Todo Books</AddLabel>\r\n                    <AddFormButton onClick={this.expandForm}>+</AddFormButton>\r\n                    <Expand open={this.state.open}>\r\n                        <FormDiv>\r\n                            <AddForm onSubmit={this.addStack}>\r\n                                <AddName ref={(a) => this._nameBox = a} />\r\n                                <AddType ref={(b) => this._typeBox = b} />\r\n                                <AddDesc ref={(c) => this._descBox = c} />\r\n                                <AddFormButton>Add</AddFormButton>\r\n                            </AddForm>\r\n                        </FormDiv>\r\n                    </Expand>\r\n                </AddDiv>\r\n                <TodoStacks entries={this.state.items} toggleNotes={this.props.toggleNotes} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoAdd\r\n","import Styled from 'styled-components';\r\n\r\nconst NotesDiv = Styled.div`\r\n    height:100%;\r\n    position:absolute;\r\n    display:inline-block;\r\n    margin:10px;\r\n    top:50px;\r\n`;\r\n\r\nexport{NotesDiv}","import React, { Component } from 'react';\r\n// import TodoStacks from './TodoStacks';\r\nimport Expand from 'react-expand-animated';\r\nimport {NotesDiv} from '../styles/NoteStyles'\r\n\r\nexport class Notes extends Component {\r\n    componentDidUpdate(){\r\n        console.log(this.props.showNotes)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <React.Fragment>\r\n                <NotesDiv>\r\n                <Expand open={this.props.showNotes}>\r\n                </Expand>\r\n                </NotesDiv>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notes\r\n","import React, { Component } from 'react'\nimport { SideBar, GlobalStyle } from './styles/SideBarStyles'\nimport { TodoAdd } from './components/TodoAdd';\nimport { Notes } from './components/Notes';\nimport {ContextMenu} from './components/ContextMenu';\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showBooks: false }\n    this.toggleNotes = this.toggleNotes.bind(this);\n  }\n  toggleNotes = (key) => {\n    this.setState((prevState) => ({\n      showNotes: !prevState.showNotes,\n    }))\n\n  }\n  render() {\n\n    return (\n      <React.Fragment>\n        <GlobalStyle />\n        <ContextMenu />\n        <SideBar>\n          <TodoAdd toggleNotes={this.toggleNotes} />\n        </SideBar>\n        <Notes showNotes={this.state.showNotes} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}